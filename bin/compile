#!/usr/bin/env bash

export_env_dir() {
  # from https://devcenter.heroku.com/articles/buildpack-api#bin-compile
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir $3

SLACK_MESSAGE="*$HEROKU_APP_NAME* was deployed"

if [[ -z "${DEPLOY_NOTIFY_GITHUB_AUTH_TOKEN}" || -z "${DEPLOY_NOTIFY_GITHUB_ORG}" || -z "${DEPLOY_NOTIFY_GITHUB_PROJECT}" ]]; then
  # Not loading Github Data
  SLACK_MESSAGE="$SLACK_MESSAGE"
elif [[ -z "${SOURCE_VERSION}" ]]; then
  # We don't have the current git sha
  SLACK_MESSAGE="$SLACK_MESSAGE"
else
  COMMIT_JSON=$(curl -H "Authorization: token $DEPLOY_NOTIFY_GITHUB_AUTH_TOKEN" https://api.github.com/repos/$DEPLOY_NOTIFY_GITHUB_ORG/$DEPLOY_NOTIFY_GITHUB_PROJECT/commits/$SOURCE_VERSION)
  AUTHOR_NAME=$(echo "$COMMIT_JSON" | python3 -c "import sys, json; print(json.load(sys.stdin, strict=False)['commit']['author']['name'])" || echo '')
  COMMIT_MESSAGE=$( (echo "$COMMIT_JSON" | python3 -c "import sys, json; print(json.load(sys.stdin, strict=False)['commit']['message'])" || echo '') | head -n 1)

  if [[ "$COMMIT_MESSAGE" == *"Merge pull request"* ]]; then
    # This is a PR merge commit and should pull details from the originating PR
    PR_NUMBER=$(echo "$COMMIT_MESSAGE" | grep -o -E '[0-9]+')

    COMMIT_JSON=$(curl -H "Authorization: token $DEPLOY_NOTIFY_GITHUB_AUTH_TOKEN" https://api.github.com/repos/$DEPLOY_NOTIFY_GITHUB_ORG/$DEPLOY_NOTIFY_GITHUB_PROJECT/pulls/$PR_NUMBER)
    COMMIT_MESSAGE=$( (echo "$COMMIT_JSON" | python3 -c "import sys, json; print(json.load(sys.stdin, strict=False)['title'])" || echo '') | head -n 1)
    PULL_BODY=$( (echo "$COMMIT_JSON" | python3 -c "import sys, json; print(json.load(sys.stdin, strict=False)['body'])" || echo '') | head -n 1)

    if [[ "$PULL_BODY" != "None" ]]; then
      COMMIT_MESSAGE="$COMMIT_MESSAGE\n$PULL_BODY"
    fi
  fi

  COMMIT_URL=$(echo "$COMMIT_JSON" | python3 -c "import sys, json; print(json.load(sys.stdin, strict=False)['html_url'])" || echo 'Can not reach Github...')
  SLACK_MESSAGE="*$HEROKU_APP_NAME* was deployed by $AUTHOR_NAME\n\n\`\`\`\n$COMMIT_MESSAGE\n\`\`\`\n$COMMIT_URL"
fi

echo "-----> Notifying Slack that the deploy is complete"
echo "       $SLACK_MESSAGE"
curl -s -X POST -H 'Content-type: application/json' --data "{\"text\":\"$SLACK_MESSAGE\"}" $SLACK_DEPLOYMENT_WEBHOOK_URL
echo ""
echo ""
